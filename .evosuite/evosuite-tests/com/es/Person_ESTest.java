/*
 * This file was automatically generated by EvoSuite
 * Thu Feb 02 15:00:13 GMT 2017
 */

package com.es;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.es.Person;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Person_ESTest extends Person_ESTest_scaffolding {

  @Test
  public void test00()  throws Throwable  {
      Person person0 = new Person("=sav?OnH*jCAE8=P2V", (-1291));
      person0.hashCode();
      assertEquals(-1291, person0.getAge());
  }

  @Test
  public void test01()  throws Throwable  {
      Person person0 = new Person((String) null, 31);
      person0.getName();
      assertEquals(31, person0.getAge());
  }

  @Test
  public void test02()  throws Throwable  {
      Person person0 = new Person((String) null, 31);
      int int0 = person0.getAge();
      assertEquals(31, int0);
  }

  @Test
  public void test03()  throws Throwable  {
      Person person0 = new Person("=sav?OnH*jCAE8=P2V", (-1291));
      int int0 = person0.getAge();
      assertEquals((-1291), int0);
  }

  @Test
  public void test04()  throws Throwable  {
      Person person0 = new Person("9i><(=Vv8@'e", 1);
      person0.hashCode();
      assertEquals(1, person0.getAge());
  }

  @Test
  public void test05()  throws Throwable  {
      Person person0 = new Person(", gFxe=", 366);
      Person person1 = new Person("Person{name=', gFxe=', age=366}", 6);
      boolean boolean0 = person0.equals(person1);
      assertFalse(boolean0);
      assertEquals(6, person1.getAge());
  }

  @Test
  public void test06()  throws Throwable  {
      Person person0 = new Person((String) null, 31);
      // Undeclared exception!
      try { 
        person0.hashCode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("com.es.Person", e);
      }
  }

  @Test
  public void test07()  throws Throwable  {
      Person person0 = new Person(", gFxe=", 366);
      boolean boolean0 = person0.equals("Person{name=', gFxe=', age=366}");
      assertFalse(boolean0);
      assertEquals(366, person0.getAge());
  }

  @Test
  public void test08()  throws Throwable  {
      Person person0 = new Person(", gFxe=", 366);
      boolean boolean0 = person0.equals((Object) null);
      assertFalse(boolean0);
      assertEquals(366, person0.getAge());
  }

  @Test
  public void test09()  throws Throwable  {
      Person person0 = new Person("", 0);
      Person person1 = new Person("9i><(=Vv8@'e", 1);
      boolean boolean0 = person0.equals(person1);
      assertEquals(1, person1.getAge());
      assertFalse(boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      Person person0 = new Person(", gFxe=", 366);
      String string0 = person0.toString();
      assertEquals("Person{name=', gFxe=', age=366}", string0);
  }

  @Test
  public void test11()  throws Throwable  {
      Person person0 = new Person("", 0);
      person0.hashCode();
      assertEquals(0, person0.getAge());
  }

  @Test
  public void test12()  throws Throwable  {
      Person person0 = new Person("{& 21iV6?mtU/H,;Jn", 374);
      person0.getName();
      assertEquals(374, person0.getAge());
  }

  @Test
  public void test13()  throws Throwable  {
      Person person0 = new Person("", 0);
      int int0 = person0.getAge();
      assertEquals(0, int0);
  }

  @Test
  public void test14()  throws Throwable  {
      Person person0 = new Person("{& 21iV6?mtU/H,;Jn", 374);
      Person person1 = new Person((String) null, 374);
      // Undeclared exception!
      try { 
        person1.equals(person0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test15()  throws Throwable  {
      Person person0 = new Person("{& 21iV6?mtU/H,;Jn", 374);
      boolean boolean0 = person0.equals(person0);
      assertTrue(boolean0);
      assertEquals(374, person0.getAge());
  }
}
